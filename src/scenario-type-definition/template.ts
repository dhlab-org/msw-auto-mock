import type { TOperation } from '../types';
import { ScenarioTypeAdapter } from './adapter';

type TemplateContract = {
  ofAllEndpoints(operations: TOperation[]): string;
};

class ScenarioTypeTemplate implements TemplateContract {
  ofAllEndpoints(operations: TOperation[]): string {
    const adapter = new ScenarioTypeAdapter(operations);

    const apiEndpointsType = `export type ApiEndpoints = {
${adapter.apiEndpointsType};
};`;

    const apiPathsType = 'export type ApiPaths = keyof ApiEndpoints;';

    const apiMethodsType = 'export type ApiMethods<T extends ApiPaths> = ApiEndpoints[T];';

    const statusCodesType = `export type ApiStatusCodes = {
${adapter.statusCodesType}
};`;

    const scenarioConfigType = `export type ScenarioConfig = {
  [scenarioId: string]: {
    description: string;
    api: {
      [K in ApiPaths]?: {
        [M in ApiMethods<K>]?: {
          status: ApiStatusCodes[K][M];
          allowCustomStatus?: boolean;
        } | {
          status: number;
          allowCustomStatus: true;
        };
      };
    };
  };
};`;

    return `/**
 * This file is AUTO GENERATED by [msw-auto-mock](https://github.com/dhlab-org/msw-auto-mock)
 * Feel free to commit/edit it as you need.
 */
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

${apiEndpointsType}

${apiPathsType}

${apiMethodsType}

${statusCodesType}

${scenarioConfigType}
`;
  }
}

export { ScenarioTypeTemplate, type TemplateContract as ScenarioTypeTemplateContract };
